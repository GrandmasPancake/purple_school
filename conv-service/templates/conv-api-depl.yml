apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.api.name }}-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      components: {{ .Values.api.components }}
  template:
    metadata:
      labels:
        components: {{ .Values.api.components }}
    spec:
      containers:
      - name: {{ .Values.api.name }}
        image: "{{ .Values.api.image }}:{{ .Values.api.version }}"
        imagePullPolicy: Always
        ports:
          - containerPort: {{ .Values.api.port }}
        resources: 
          limits: {{ .Values.api.limits | toYaml | nindent 12 }}
        env:
          - name: AMQP_EXCHANGE
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secrets.name }}-secrets
                key: AMQP_EXCHANGE
          - name: AMQP_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secrets.name }}-secrets
                key: AMQP_USER
          - name: AMQP_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secrets.name }}-secrets
                key: AMQP_PASSWORD
          - name: AMQP_HOSTNAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secrets.name }}-secrets
                key: AMQP_HOSTNAME
        volumeMounts:
        - name: {{ .Values.api.name }}-db
          mountPath: /opt/app/uploads
      volumes:
        - name: {{ .Values.api.name }}-db
          persistentVolumeClaim:
            claimName: {{ .Values.api.name }}-pvc
